version: '3'
services:

### Nginx container #########################################

  nginx:
    image: nginx:${NGINX_VERSION}-alpine
    container_name: nginx
    environment:
      TZ: ${TZ}
      LANG: C.UTF-8
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    volumes:
      - ${WWW_DIR}:/app:rw
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/nginx/conf.d:/etc/nginx/conf.d:rw
      - ./log/nginx:/var/log/nginx:rw
    restart: always
    networks:
      net-default:
        ipv4_address: ${NGINX_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "1"

### PHP container #########################################

  php:
    build:
      context: ./build/php
      args:
        PHP_VERSION: ${PHP_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: ${TZ}
    container_name: php
    expose:
      - "${PHP_EXPOSE_PORT}"
    volumes:
      - ${WWW_DIR}:/app:rw
      - ./conf/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./conf/php/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./log/php:/var/log:rw
      - ./conf/php/crond:/var/spool/cron/crontabs/root:rw
      - ./conf/php/supervisord.conf:/etc/supervisord.conf:rw
      - ./conf/php/supervisor.d:/etc/supervisor.d:rw
    restart: always
    # extra_hosts 根据需要设置为本地环境对应的域名
    extra_hosts:
      - "admin.local.com:${NGINX_IPV4}"
      - "api.local.com:${NGINX_IPV4}"
      - "pay.local.com:${NGINX_IPV4}"
      - "salesapi.local.com:${NGINX_IPV4}"
    networks:
      net-default:
        ipv4_address: ${PHP_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "1"

### PHP7.4 container #########################################

  php74:
    build:
      context: ./build/php74
      args:
        PHP_VERSION: ${PHP74_VERSION}
        PHP_EXTENSIONS: ${PHP74_EXTENSIONS}
        SOURCES_MIRROR: ${DEBIAN_SOURCES_MIRROR}
        TZ: ${TZ}
    container_name: php
    environment:
      TZ: ${TZ}
    expose:
      - "${PHP74_EXPOSE_PORT}"
    volumes:
      - ${WWW_DIR}:/app:rw
      - ./conf/php74/php.ini:/usr/local/etc/php/php.ini:ro
      - ./conf/php74/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./log/php74:/var/log:rw
      - ./conf/php74/crond:/etc/cron.d/root:rw
      - ./conf/php74/supervisord.conf:/etc/supervisord.conf:rw
      - ./conf/php74/supervisor.d:/etc/supervisor.d:rw
    depends_on:
      - redis
    restart: always
    # extra_hosts 根据需要设置为本地环境对应的域名
    extra_hosts:
      - "admin.local.com:${NGINX_IPV4}"
      - "api.local.com:${NGINX_IPV4}"
      - "pay.local.com:${NGINX_IPV4}"
      - "salesapi.local.com:${NGINX_IPV4}"
    dns:
      - 223.5.5.5
      - 8.8.8.8
    networks:
      net-default:
        ipv4_address: ${PHP74_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "1"

### Java container #########################################

  java:
    build:
      context: ./build/java
    container_name: java
    expose:
      - "${JAVA_EXPOSE_PORT}"
    volumes:
      - ${WWW_DIR}/certs:/app/certs:ro
    restart: always
    networks:
      net-default:
        ipv4_address: ${JAVA_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "1"

### Java Pab container #########################################

  java-pab:
    build:
      context: ./build/java-pab
    container_name: java-pab
    expose:
      - "${JAVA_PAB_EXPOSE_PORT}"
    restart: always
    networks:
      net-default:
        ipv4_address: ${JAVA_PAB_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "1"

### Mysql container #########################################

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    environment:
      TZ: ${TZ}
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ./db/mysql:/var/lib/mysql:rw
      - ./conf/mysql/my.cnf:/etc/mysql/my.cnf:ro
      - ./log/mysql:/var/log/mysql:rw
    restart: always
    networks:
      net-default:
        ipv4_address: ${MYSQL_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "1"

### Redis container #########################################

  redis:
    image: redis:${REDIS_VERSION}-alpine
    container_name: redis
    environment:
      TZ: ${TZ}
      LANG: C.UTF-8
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ./conf/redis/redis.conf:/etc/redis.conf:ro
      - ./db/redis:/data:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    networks:
      net-default:
        ipv4_address: ${REDIS_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "1"

### mongodb container #########################################

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    environment:
      TZ: ${TZ}
      LANG: C.UTF-8
    # Windows 平台不支持目录挂载，Mac 和 Linux 下可去掉注释以实现持久化存储
    # volumes:
    #   - ./db/mongodb:/data/db:rw
    restart: always
    expose:
      - "${MONGODB_EXPOSE_PORT}"
    networks:
      net-default:
        ipv4_address: ${MONGODB_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "1"

### Yapi container #########################################

  yapi:
    build:
      context: ./build/yapi
      args:
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        NPM_REGISTRY: ${NPM_REGISTRY}
        TZ: ${TZ}
        YAPI_VERSION: ${YAPI_VERSION}
        YAPI_PORT: ${YAPI_EXPOSE_PORT}
        ADMIN_ACCOUNT: ${YAPI_ADMIN_ACCOUNT}
        DB_SERVER: mongodb
        DB_NAME: ${YAPI_DB_NAME}
        DB_PORT: ${MONGODB_EXPOSE_PORT}
    container_name: yapi
    ports:
      - "${YAPI_HOST_PORT}:${YAPI_EXPOSE_PORT}"
    volumes:
      - ./log/yapi:/api/log:rw
    depends_on:
      - mongodb
    restart: always
    networks:
      net-default:
        ipv4_address: ${YAPI_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "1"

### PHPMyAdmin container #########################################

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "${PHPMYADMIN_HOST_PORT}:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      TZ: $TZ
    depends_on:
      - mysql
    restart: always
    networks:
      net-default:
        ipv4_address: ${PHPMYADMIN_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "1"

### Swoft container #########################################

  swoft:
    build:
      context: ./build/swoft
    container_name: swoft
    command: php -S 127.0.0.1:13300
    environment:
      - APP_ENV=prod
      - TIMEZONE=${TZ}
    restart: always
    volumes:
       - ${WWW_DIR}:/app:rw
    # entrypoint: ["php", "/app/${SWOFT_WS_DIR}/bin/swoft", "ws:start"]
    networks:
      net-default:
        ipv4_address: ${SWOFT_IPV4}
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "1"

networks:
  net-default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET_MASK}
